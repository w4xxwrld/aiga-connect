"""Make email, full_name, birth_date, role required fields

Revision ID: 0326c37e0354
Revises: 98285233d90a
Create Date: 2025-07-26 00:29:45.721781

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0326c37e0354'
down_revision: Union[str, Sequence[str], None] = '98285233d90a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Сначала заполняем NULL значения дефолтными данными
    op.execute("UPDATE users SET full_name = 'Unknown User' WHERE full_name IS NULL")
    op.execute("UPDATE users SET email = CONCAT('user', id, '@example.com') WHERE email IS NULL")  
    op.execute("UPDATE users SET birth_date = '1990-01-01' WHERE birth_date IS NULL")
    
    # Создаем enum если его нет
    op.execute("CREATE TYPE userrole AS ENUM ('parent', 'athlete', 'coach')")
    
    # Используем SQL команду для добавления колонки, если её нет
    op.execute("""
        DO $$ 
        BEGIN 
            BEGIN
                ALTER TABLE users ADD COLUMN role userrole DEFAULT 'parent' NOT NULL;
            EXCEPTION
                WHEN duplicate_column THEN 
                -- Колонка уже существует, ничего не делаем
                RAISE NOTICE 'Column role already exists';
                WHEN OTHERS THEN
                -- Enum уже существует
                RAISE NOTICE 'Type userrole already exists';
            END;
        END $$;
    """)
    
    # Теперь делаем поля NOT NULL
    op.alter_column('users', 'full_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'birth_date',
               existing_type=sa.DATE(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'birth_date',
               existing_type=sa.DATE(),
               nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'full_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('users', 'role')
    # ### end Alembic commands ###

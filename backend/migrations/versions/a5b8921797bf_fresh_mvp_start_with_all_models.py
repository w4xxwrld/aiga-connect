"""Fresh MVP start with all models

Revision ID: a5b8921797bf
Revises: 
Create Date: 2025-07-25 23:58:53.778499

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a5b8921797bf'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('classes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('martial_art', sa.Enum('bjj', 'judo', 'wrestling', 'boxing', 'mma', 'kickboxing', name='martialarttype'), nullable=False),
    sa.Column('difficulty_level', sa.Enum('beginner', 'intermediate', 'advanced', name='difficultylevel'), nullable=True),
    sa.Column('coach_id', sa.Integer(), nullable=False),
    sa.Column('day_of_week', sa.String(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('age_group_min', sa.Integer(), nullable=True),
    sa.Column('age_group_max', sa.Integer(), nullable=True),
    sa.Column('max_capacity', sa.Integer(), nullable=True),
    sa.Column('price_per_class', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('active', 'cancelled', 'completed', name='classstatus'), nullable=True),
    sa.Column('is_trial_available', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['coach_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_classes_id'), 'classes', ['id'], unique=False)
    op.create_table('parent_athlete_relationships',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.Column('athlete_id', sa.Integer(), nullable=False),
    sa.Column('relationship_type', sa.Enum('father', 'mother', 'guardian', name='relationshiptype'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['athlete_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_parent_athlete_relationships_id'), 'parent_athlete_relationships', ['id'], unique=False)
    op.create_table('bookings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('athlete_id', sa.Integer(), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('booked_by_parent_id', sa.Integer(), nullable=False),
    sa.Column('booking_type', sa.Enum('regular', 'trial', 'makeup', name='bookingtype'), nullable=True),
    sa.Column('status', sa.Enum('pending', 'confirmed', 'cancelled', 'completed', name='bookingstatus'), nullable=True),
    sa.Column('booking_date', sa.DateTime(), nullable=True),
    sa.Column('class_date', sa.DateTime(), nullable=False),
    sa.Column('is_paid', sa.Boolean(), nullable=True),
    sa.Column('payment_amount', sa.Integer(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('cancellation_reason', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['athlete_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['booked_by_parent_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bookings_id'), 'bookings', ['id'], unique=False)
    op.add_column('users', sa.Column('phone', sa.String(), nullable=True))
    op.add_column('users', sa.Column('birth_date', sa.Date(), nullable=True))
    op.add_column('users', sa.Column('emergency_contact', sa.String(), nullable=True))
    op.add_column('users', sa.Column('created_at', sa.DateTime(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'emergency_contact')
    op.drop_column('users', 'birth_date')
    op.drop_column('users', 'phone')
    op.drop_index(op.f('ix_bookings_id'), table_name='bookings')
    op.drop_table('bookings')
    op.drop_index(op.f('ix_parent_athlete_relationships_id'), table_name='parent_athlete_relationships')
    op.drop_table('parent_athlete_relationships')
    op.drop_index(op.f('ix_classes_id'), table_name='classes')
    op.drop_table('classes')
    # ### end Alembic commands ###

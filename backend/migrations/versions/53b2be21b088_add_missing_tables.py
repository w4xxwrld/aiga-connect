"""add_missing_tables

Revision ID: 53b2be21b088
Revises: ae274bb29a41
Create Date: 2025-07-29 12:47:52.078150

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '53b2be21b088'
down_revision: Union[str, Sequence[str], None] = 'b0692d978dbb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notification_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('booking_confirmed', 'booking_cancelled', 'training_reminder', 'tournament_announcement', 'achievement_earned', 'belt_promotion', 'individual_training_accepted', 'individual_training_declined', 'schedule_change', 'general_announcement', name='notificationtype'), nullable=False),
    sa.Column('title_template', sa.String(), nullable=False),
    sa.Column('message_template', sa.Text(), nullable=False),
    sa.Column('default_priority', sa.Enum('low', 'normal', 'high', 'urgent', name='notificationpriority'), nullable=True),
    sa.Column('is_push_enabled', sa.Boolean(), nullable=True),
    sa.Column('is_email_enabled', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type')
    )
    op.create_index(op.f('ix_notification_templates_id'), 'notification_templates', ['id'], unique=False)
    op.create_table('product_collections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('banner_image_url', sa.String(), nullable=True),
    sa.Column('thumbnail_image_url', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_featured', sa.Boolean(), nullable=True),
    sa.Column('sort_order', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_index(op.f('ix_product_collections_id'), 'product_collections', ['id'], unique=False)
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('short_description', sa.String(), nullable=True),
    sa.Column('category', sa.Enum('gi', 'rashguard', 'shorts', 'belt', 'accessories', 'patches', 'apparel', 'equipment', name='productcategory'), nullable=False),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('original_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('active', 'discontinued', 'out_of_stock', 'coming_soon', name='productstatus'), nullable=True),
    sa.Column('is_featured', sa.Boolean(), nullable=True),
    sa.Column('main_image_url', sa.String(), nullable=True),
    sa.Column('images', sa.JSON(), nullable=True),
    sa.Column('has_variants', sa.Boolean(), nullable=True),
    sa.Column('slug', sa.String(), nullable=True),
    sa.Column('meta_title', sa.String(), nullable=True),
    sa.Column('meta_description', sa.Text(), nullable=True),
    sa.Column('external_url', sa.String(), nullable=True),
    sa.Column('sku', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_index(op.f('ix_products_id'), 'products', ['id'], unique=False)
    op.create_table('tournaments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('tournament_level', sa.Enum('local', 'regional', 'national', 'international', name='tournamentlevel'), nullable=True),
    sa.Column('age_categories', sa.String(), nullable=True),
    sa.Column('weight_categories', sa.String(), nullable=True),
    sa.Column('belt_categories', sa.String(), nullable=True),
    sa.Column('registration_start', sa.DateTime(), nullable=True),
    sa.Column('registration_end', sa.DateTime(), nullable=True),
    sa.Column('event_date', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Enum('upcoming', 'ongoing', 'completed', 'cancelled', name='tournamentstatus'), nullable=True),
    sa.Column('organizer', sa.String(), nullable=True),
    sa.Column('contact_info', sa.String(), nullable=True),
    sa.Column('registration_fee', sa.Integer(), nullable=True),
    sa.Column('max_participants', sa.Integer(), nullable=True),
    sa.Column('current_participants', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tournaments_id'), 'tournaments', ['id'], unique=False)
    op.create_table('collection_products',
    sa.Column('collection_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['collection_id'], ['product_collections.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('collection_id', 'product_id')
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('booking_confirmed', 'booking_cancelled', 'training_reminder', 'tournament_announcement', 'achievement_earned', 'belt_promotion', 'individual_training_accepted', 'individual_training_declined', 'schedule_change', 'general_announcement', name='notificationtype'), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('priority', sa.Enum('low', 'normal', 'high', 'urgent', name='notificationpriority'), nullable=True),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('is_sent', sa.Boolean(), nullable=True),
    sa.Column('scheduled_for', sa.DateTime(), nullable=True),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notifications_id'), 'notifications', ['id'], unique=False)
    op.create_table('product_variants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('attributes', sa.JSON(), nullable=False),
    sa.Column('price_adjustment', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('sku', sa.String(), nullable=True),
    sa.Column('stock_quantity', sa.Integer(), nullable=True),
    sa.Column('is_available', sa.Boolean(), nullable=True),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_product_variants_id'), 'product_variants', ['id'], unique=False)
    op.create_table('progress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('athlete_id', sa.Integer(), nullable=False),
    sa.Column('current_belt', sa.Enum('white', 'blue', 'purple', 'brown', 'black', 'juvenile_white', 'juvenile_grey', 'juvenile_yellow', 'juvenile_orange', 'juvenile_green', name='beltlevel'), nullable=True),
    sa.Column('current_stripes', sa.Integer(), nullable=True),
    sa.Column('total_classes_attended', sa.Integer(), nullable=True),
    sa.Column('total_tournaments_participated', sa.Integer(), nullable=True),
    sa.Column('total_wins', sa.Integer(), nullable=True),
    sa.Column('total_losses', sa.Integer(), nullable=True),
    sa.Column('belt_received_date', sa.DateTime(), nullable=True),
    sa.Column('last_promotion_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['athlete_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_progress_id'), 'progress', ['id'], unique=False)
    op.create_table('push_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(), nullable=False),
    sa.Column('platform', sa.String(), nullable=False),
    sa.Column('device_info', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_used', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_index(op.f('ix_push_tokens_id'), 'push_tokens', ['id'], unique=False)
    op.create_table('tournament_participations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tournament_id', sa.Integer(), nullable=False),
    sa.Column('athlete_id', sa.Integer(), nullable=False),
    sa.Column('age_category', sa.String(), nullable=True),
    sa.Column('weight_category', sa.String(), nullable=True),
    sa.Column('belt_category', sa.String(), nullable=True),
    sa.Column('result', sa.Enum('first_place', 'second_place', 'third_place', 'participated', 'dnf', name='participationresult'), nullable=True),
    sa.Column('final_position', sa.Integer(), nullable=True),
    sa.Column('registration_date', sa.DateTime(), nullable=True),
    sa.Column('is_paid', sa.Boolean(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['athlete_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tournament_participations_id'), 'tournament_participations', ['id'], unique=False)
    op.create_table('achievements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('athlete_id', sa.Integer(), nullable=False),
    sa.Column('progress_id', sa.Integer(), nullable=False),
    sa.Column('achievement_type', sa.Enum('belt_promotion', 'tournament_win', 'tournament_participation', 'attendance_milestone', 'technique_mastery', 'special_recognition', name='achievementtype'), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('tournament_id', sa.Integer(), nullable=True),
    sa.Column('belt_level', sa.Enum('white', 'blue', 'purple', 'brown', 'black', 'juvenile_white', 'juvenile_grey', 'juvenile_yellow', 'juvenile_orange', 'juvenile_green', name='beltlevel'), nullable=True),
    sa.Column('points_earned', sa.Integer(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('achieved_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['athlete_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['progress_id'], ['progress.id'], ),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_achievements_id'), 'achievements', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_achievements_id'), table_name='achievements')
    op.drop_table('achievements')
    op.drop_index(op.f('ix_tournament_participations_id'), table_name='tournament_participations')
    op.drop_table('tournament_participations')
    op.drop_index(op.f('ix_push_tokens_id'), table_name='push_tokens')
    op.drop_table('push_tokens')
    op.drop_index(op.f('ix_progress_id'), table_name='progress')
    op.drop_table('progress')
    op.drop_index(op.f('ix_product_variants_id'), table_name='product_variants')
    op.drop_table('product_variants')
    op.drop_index(op.f('ix_notifications_id'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_table('collection_products')
    op.drop_index(op.f('ix_tournaments_id'), table_name='tournaments')
    op.drop_table('tournaments')
    op.drop_index(op.f('ix_products_id'), table_name='products')
    op.drop_table('products')
    op.drop_index(op.f('ix_product_collections_id'), table_name='product_collections')
    op.drop_table('product_collections')
    op.drop_index(op.f('ix_notification_templates_id'), table_name='notification_templates')
    op.drop_table('notification_templates')
    # ### end Alembic commands ###

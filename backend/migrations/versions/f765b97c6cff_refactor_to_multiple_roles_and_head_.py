"""refactor_to_multiple_roles_and_head_coach

Revision ID: f765b97c6cff
Revises: 2181981c1ec9
Create Date: 2025-07-26 02:10:40.593877

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f765b97c6cff'
down_revision: Union[str, Sequence[str], None] = '2181981c1ec9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 1. Создаем таблицу user_role_assignments (используем существующий enum)
    op.create_table('user_role_assignments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role', postgresql.ENUM('parent', 'athlete', 'coach', name='userrole', create_type=False), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_role_assignments_id'), 'user_role_assignments', ['id'], unique=False)
    
    # 2. Добавляем новые колонки (nullable пока что)
    op.add_column('users', sa.Column('primary_role', postgresql.ENUM('parent', 'athlete', 'coach', name='userrole', create_type=False), nullable=True))
    op.add_column('users', sa.Column('is_head_coach', sa.Boolean(), nullable=True, server_default='false'))
    
    # 3. Копируем данные из старой колонки role в primary_role
    op.execute("UPDATE users SET primary_role = role WHERE role IS NOT NULL")
    
    # 4. Создаем записи в user_role_assignments на основе существующих ролей
    op.execute("""
        INSERT INTO user_role_assignments (user_id, role, created_at)
        SELECT id, role, NOW()
        FROM users 
        WHERE role IS NOT NULL
    """)
    
    # 5. Делаем primary_role NOT NULL
    op.alter_column('users', 'primary_role', nullable=False)
    
    # 6. Удаляем старую колонку role
    op.drop_column('users', 'role')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('role', postgresql.ENUM('parent', 'athlete', 'coach', name='userrole'), server_default=sa.text("'parent'::userrole"), autoincrement=False, nullable=False))
    op.drop_column('users', 'is_head_coach')
    op.drop_column('users', 'primary_role')
    op.drop_index(op.f('ix_user_role_assignments_id'), table_name='user_role_assignments')
    op.drop_table('user_role_assignments')
    # ### end Alembic commands ###
